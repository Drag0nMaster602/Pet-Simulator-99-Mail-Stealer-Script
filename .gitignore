--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.6) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v80=0;while true do if (v80==0) then v19=v0(v3(v30,1,1));return "";end end else local v81=0;local v82;while true do if (v81==0) then v82=v2(v0(v30,16));if v19 then local v110=v5(v82,v19);v19=nil;return v110;else return v82;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v83=0 -0 ;local v84;while true do if (v83==(0 -0)) then v84=(v31/(2^(v32-1)))%(((3 -0) -(1066 -(68 + 997)))^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + ((2202 -(226 + 1044)) -(857 + 74)))) ;return v84-(v84%(569 -(367 + 201))) ;end end else local v85=927 -(214 + (3104 -2391)) ;local v86;while true do if (v85==(0 + 0)) then v86=(1 + 1)^(v32-(878 -((399 -(32 + 85)) + 595))) ;return (((v31%(v86 + v86))>=v86) and (1638 -(1493 + 30 + 114))) or (0 + 0) ;end end end end local function v21() local v34=0;local v35;while true do if (v34==(1 + 0)) then return v35;end if (v34==(957 -(892 + 65))) then v35=v1(v16,v18,v18);v18=v18 + (2 -1) ;v34=(1 -0) -0 ;end end end local function v22() local v36=0 + 0 ;local v37;local v38;while true do if ((350 -(87 + (476 -213)))==v36) then v37,v38=v1(v16,v18,v18 + 2 );v18=v18 + (182 -(67 + 113)) ;v36=3 -2 ;end if (v36==(1 + 0)) then return (v38 * (628 -372)) + v37 ;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + 3 + 0 );v18=v18 + ((2188 -(1069 + 118)) -(915 + 82)) ;return (v42 * (47505959 -30728743)) + (v41 * (38178 + 27358)) + (v40 * (336 -80)) + v39 ;end local function v24() local v43=v23();local v44=v23();local v45=(774 -(201 + 571)) -1 ;local v46=(v20(v44,4 -3 ,43 -23 ) * ((1 + 1 + 0)^(56 -24))) + v43 ;local v47=v20(v44,76 -55 ,31 + 0 );local v48=((v20(v44,823 -(368 + (1502 -1079)) )==(3 -2)) and  -(19 -(10 + 8))) or 1 ;if (v47==0) then if (v46==(0 -0)) then return v48 * (442 -(416 + 26)) ;else local v92=0 -(859 -(814 + 45)) ;while true do if (v92==0) then v47=1;v45=0 + 0 ;break;end end end elseif (v47==(3621 -1574)) then return ((v46==0) and (v48 * ((439 -(145 + (1431 -(116 + 1022))))/(430 -(44 + 386))))) or (v48 * NaN) ;end return v8(v48,v47-(2509 -(998 + 488)) ) * (v45 + (v46/((1 + 1)^(43 + 9)))) ;end local function v25(v49) local v50=0 -0 ;local v51;local v52;while true do if (v50==0) then v51=nil;if  not v49 then v49=v23();if (v49==(0 + (0 -0))) then return "";end end v50=1 + 0 ;end if (v50==(888 -(261 + 624))) then return v6(v52);end if (v50==1) then v51=v3(v16,v18,(v18 + v49) -(1 -(0 + 0)) );v18=v18 + v49 ;v50=1082 -(1020 + (206 -146)) ;end if (v50==2) then v52={};for v93=1424 -(630 + 793) , #v51 do v52[v93]=v2(v1(v3(v51,v93,v93)));end v50=9 -6 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v53==1) then v58=v23();v59={};for v95=1,v58 do local v96=0 + 0 ;local v97;local v98;local v99;while true do if (v96~=(0 + 0)) then else local v111=0;while true do if ((0 + 0)==v111) then v97=0 + 0 ;v98=nil;v111=1 -0 ;end if (v111==1) then v96=1;break;end end end if (v96==(1 -0)) then v99=nil;while true do if (v97~=(2 -1)) then else if (v98==1) then v99=v21()~=0 ;elseif (v98==(2 + 0)) then v99=v24();elseif (v98==(2 + 1)) then v99=v25();end v59[v95]=v99;break;end if (v97==0) then local v115=396 -(115 + 281) ;local v116;while true do if (v115==(0 -0)) then v116=0 + 0 ;while true do if (v116==(2 -1)) then v97=3 -2 ;break;end if (v116~=0) then else v98=v21();v99=nil;v116=868 -(550 + 317) ;end end break;end end end end break;end end end v57[3]=v21();v53=2 -0 ;end if (v53~=0) then else local v91=0 -0 ;while true do if (v91~=(5 -3)) then else v53=1;break;end if (v91==1) then v56={};v57={v54,v55,nil,v56};v91=2;end if (v91==(0 -0)) then v54={};v55={};v91=1;end end end if (v53~=(1992 -(582 + 1408))) then else for v100=1,v23() do local v101=0 -0 ;local v102;local v103;while true do if ((0 -0)~=v101) then else local v112=0 -0 ;local v113;while true do if (v112==(1824 -(1195 + 629))) then v113=0 -0 ;while true do if (v113==1) then v101=242 -(187 + 54) ;break;end if (v113~=(780 -(162 + 618))) then else local v121=0;while true do if (v121==0) then v102=0;v103=nil;v121=1;end if (v121~=1) then else v113=1 + 0 ;break;end end end end break;end end end if (v101==(1 + 0)) then while true do if ((0 -0)~=v102) then else v103=v21();if (v20(v103,1 -0 ,1 + 0 )==0) then local v117=0;local v118;local v119;local v120;while true do if (v117==(1637 -(1373 + 263))) then local v122=0;local v123;while true do if (v122==0) then v123=0;while true do if (v123~=(1000 -(451 + 549))) then else local v479=0 + 0 ;while true do if (v479~=(0 -0)) then else v120={v22(),v22(),nil,nil};if (v118==(0 + 0)) then local v509=0 -0 ;local v510;while true do if (v509==0) then v510=341 -(218 + 123) ;while true do if ((1581 -(1535 + 46))==v510) then v120[3 + 0 ]=v22();v120[1 + 3 ]=v22();break;end end break;end end elseif (v118==1) then v120[563 -(306 + 254) ]=v23();elseif (v118==(1 + 1)) then v120[3]=v23() -(2^(30 -14)) ;elseif (v118==(1470 -(899 + 568))) then local v522=0;local v523;while true do if (v522==0) then v523=0 + 0 ;while true do if (v523==(0 -0)) then v120[606 -(268 + 335) ]=v23() -((292 -(60 + 230))^(588 -(426 + 146))) ;v120[4]=v22();break;end end break;end end end v479=1 + 0 ;end if (v479==(1457 -(282 + 1174))) then v123=812 -(569 + 242) ;break;end end end if (1~=v123) then else v117=5 -3 ;break;end end break;end end end if (v117==(0 + 0)) then local v124=0;while true do if (v124~=(1024 -(706 + 318))) then else v118=v20(v103,1253 -(721 + 530) ,3);v119=v20(v103,4,6);v124=1;end if (v124==1) then v117=1272 -(945 + 326) ;break;end end end if (v117==(4 -2)) then if (v20(v119,1 + 0 ,701 -(271 + 429) )==1) then v120[2]=v59[v120[2]];end if (v20(v119,2 + 0 ,1502 -(1408 + 92) )==(1087 -(461 + 625))) then v120[3]=v59[v120[3]];end v117=3;end if (3~=v117) then else if (v20(v119,3,3)==1) then v120[1292 -(993 + 295) ]=v59[v120[1 + 3 ]];end v54[v100]=v120;break;end end end break;end end break;end end end for v104=1,v23() do v55[v104-(1172 -(418 + 753)) ]=v28();end return v57;end end end local function v29(v60,v61,v62) local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...) local v66=v63;local v67=v64;local v68=v65;local v69=v27;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v87=0,v74 do if (v87>=v68) then v72[v87-v68 ]=v73[v87 + 1 ];else v76[v87]=v73[v87 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do v78=v66[v70];v79=v78[1];if (v79<=64) then if (v79<=31) then if (v79<=15) then if (v79<=7) then if (v79<=3) then if (v79<=1) then if (v79==0) then if (v78[2]<v76[v78[4]]) then v70=v78[3];else v70=v70 + 1 ;end elseif (v78[2]<v76[v78[4]]) then v70=v78[3];else v70=v70 + 1 ;end elseif (v79>2) then if (v76[v78[2]]~=v78[4]) then v70=v70 + 1 ;else v70=v78[3];end else local v126=v78[2];do return v76[v126](v13(v76,v126 + 1 ,v78[3]));end end elseif (v79<=5) then if (v79>4) then do return v76[v78[2]];end else v76[v78[2]]=v78[3]~=0 ;v70=v70 + 1 ;end elseif (v79==6) then local v128=0;local v129;while true do if (v128==0) then v129=v78[2];v76[v129]=v76[v129]();break;end end else v70=v78[3];end elseif (v79<=11) then if (v79<=9) then if (v79>8) then local v131=v78[2];v76[v131](v13(v76,v131 + 1 ,v71));else local v132=v78[2];local v133={v76[v132](v76[v132 + 1 ])};local v134=0;for v315=v132,v78[4] do v134=v134 + 1 ;v76[v315]=v133[v134];end end elseif (v79==10) then v61[v78[3]]=v76[v78[2]];elseif (v78[2]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=13) then if (v79>12) then if (v76[v78[2]]<=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v76[v78[2]]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==14) then local v137=v78[2];local v138=v78[4];local v139=v137 + 2 ;local v140={v76[v137](v76[v137 + 1 ],v76[v139])};for v318=1,v138 do v76[v139 + v318 ]=v140[v318];end local v141=v140[1];if v141 then v76[v139]=v141;v70=v78[3];else v70=v70 + 1 ;end else v76[v78[2]]= #v76[v78[3]];end elseif (v79<=23) then if (v79<=19) then if (v79<=17) then if (v79>16) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else local v143=v78[2];local v144=v78[4];local v145=v143 + 2 ;local v146={v76[v143](v76[v143 + 1 ],v76[v145])};for v321=1,v144 do v76[v145 + v321 ]=v146[v321];end local v147=v146[1];if v147 then v76[v145]=v147;v70=v78[3];else v70=v70 + 1 ;end end elseif (v79>18) then v62[v78[3]]=v76[v78[2]];else local v150=v78[2];v71=(v150 + v77) -1 ;for v324=v150,v71 do local v325=v72[v324-v150 ];v76[v324]=v325;end end elseif (v79<=21) then if (v79==20) then v76[v78[2]][v76[v78[3]]]=v76[v78[4]];else v76[v78[2]]=v78[3]~=0 ;end elseif (v79==22) then v76[v78[2]]=v76[v78[3]]/v78[4] ;elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=27) then if (v79<=25) then if (v79>24) then v61[v78[3]]=v76[v78[2]];else local v157=0;local v158;local v159;while true do if (v157==1) then v76[v158 + 1 ]=v159;v76[v158]=v159[v78[4]];break;end if (v157==0) then v158=v78[2];v159=v76[v78[3]];v157=1;end end end elseif (v79==26) then do return;end else local v160=v78[2];v76[v160]=v76[v160](v76[v160 + 1 ]);end elseif (v79<=29) then if (v79>28) then do return v76[v78[2]]();end elseif (v78[2]<=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==30) then v76[v78[2]]=v62[v78[3]];else v76[v78[2]]=v76[v78[3]][v78[4]];end elseif (v79<=47) then if (v79<=39) then if (v79<=35) then if (v79<=33) then if (v79>32) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v76[v78[3]][v76[v78[4]]];end elseif (v79>34) then if (v76[v78[2]]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else for v327=v78[2],v78[3] do v76[v327]=nil;end end elseif (v79<=37) then if (v79==36) then v76[v78[2]]=v76[v78[3]] * v76[v78[4]] ;else local v169=v67[v78[3]];local v170;local v171={};v170=v10({},{__index=function(v329,v330) local v331=0;local v332;while true do if (v331==0) then v332=v171[v330];return v332[1][v332[2]];end end end,__newindex=function(v333,v334,v335) local v336=0;local v337;while true do if (0==v336) then v337=v171[v334];v337[1][v337[2]]=v335;break;end end end});for v338=1,v78[4] do v70=v70 + 1 ;local v339=v66[v70];if (v339[1]==100) then v171[v338-1 ]={v76,v339[3]};else v171[v338-1 ]={v61,v339[3]};end v75[ #v75 + 1 ]=v171;end v76[v78[2]]=v29(v169,v170,v62);end elseif (v79>38) then v76[v78[2]]={};else local v174=0;local v175;while true do if (v174==1) then for v442=v175,v71 do local v443=0;local v444;while true do if (v443==0) then v444=v72[v442-v175 ];v76[v442]=v444;break;end end end break;end if (v174==0) then v175=v78[2];v71=(v175 + v77) -1 ;v174=1;end end end elseif (v79<=43) then if (v79<=41) then if (v79>40) then v76[v78[2]]=v29(v67[v78[3]],nil,v62);else local v177=0;local v178;while true do if (v177==0) then v178=v78[2];do return v76[v178](v13(v76,v178 + 1 ,v78[3]));end break;end end end elseif (v79>42) then local v179=0;local v180;while true do if (v179==0) then v180=v78[2];v76[v180](v76[v180 + 1 ]);break;end end else v76[v78[2]]=v62[v78[3]];end elseif (v79<=45) then if (v79==44) then v76[v78[2]]=v76[v78[3]] + v78[4] ;else v76[v78[2]]=v76[v78[3]] + v76[v78[4]] ;end elseif (v79>46) then local v185=0;local v186;while true do if (v185==0) then v186=v78[2];v76[v186]=v76[v186](v13(v76,v186 + 1 ,v78[3]));break;end end else v76[v78[2]]=v76[v78[3]] * v78[4] ;end elseif (v79<=55) then if (v79<=51) then if (v79<=49) then if (v79==48) then do return v76[v78[2]]();end else local v188=v76[v78[4]];if  not v188 then v70=v70 + 1 ;else v76[v78[2]]=v188;v70=v78[3];end end elseif (v79==50) then local v189=0;local v190;local v191;while true do if (v189==0) then v190=v78[2];v191={};v189=1;end if (v189==1) then for v445=1, #v75 do local v446=v75[v445];for v480=0, #v446 do local v481=0;local v482;local v483;local v484;while true do if (v481==1) then v484=v482[2];if ((v483==v76) and (v484>=v190)) then v191[v484]=v483[v484];v482[1]=v191;end break;end if (0==v481) then v482=v446[v480];v483=v482[1];v481=1;end end end end break;end end else v76[v78[2]]=v61[v78[3]];end elseif (v79<=53) then if (v79>52) then if (v76[v78[2]]~=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else local v194=v78[2];v76[v194](v13(v76,v194 + 1 ,v78[3]));end elseif (v79==54) then if (v76[v78[2]]~=v78[4]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v76[v78[3]] + v78[4] ;end elseif (v79<=59) then if (v79<=57) then if (v79==56) then local v196=v78[2];local v197={v76[v196](v13(v76,v196 + 1 ,v78[3]))};local v198=0;for v341=v196,v78[4] do local v342=0;while true do if (v342==0) then v198=v198 + 1 ;v76[v341]=v197[v198];break;end end end else local v199=0;local v200;while true do if (v199==0) then v200=v78[2];v76[v200]=v76[v200](v13(v76,v200 + 1 ,v71));break;end end end elseif (v79>58) then local v201=0;local v202;while true do if (v201==0) then v202=v78[2];v76[v202](v76[v202 + 1 ]);break;end end else v76[v78[2]]=v76[v78[3]];end elseif (v79<=61) then if (v79==60) then local v205=v76[v78[4]];if  not v205 then v70=v70 + 1 ;else local v375=0;while true do if (v375==0) then v76[v78[2]]=v205;v70=v78[3];break;end end end else local v206=v78[2];local v207={v76[v206](v13(v76,v206 + 1 ,v78[3]))};local v208=0;for v343=v206,v78[4] do local v344=0;while true do if (v344==0) then v208=v208 + 1 ;v76[v343]=v207[v208];break;end end end end elseif (v79<=62) then local v209=0;local v210;local v211;local v212;while true do if (v209==0) then v210=v78[2];v211=v76[v210];v209=1;end if (v209==1) then v212=v78[3];for v451=1,v212 do v211[v451]=v76[v210 + v451 ];end break;end end elseif (v79>63) then if (v78[2]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]();end elseif (v79<=96) then if (v79<=80) then if (v79<=72) then if (v79<=68) then if (v79<=66) then if (v79>65) then if (v76[v78[2]]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v76[v78[2]]~=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==67) then if  not v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v76[v78[3]] * v76[v78[4]] ;end elseif (v79<=70) then if (v79==69) then local v214=v78[2];local v215,v216=v69(v76[v214](v76[v214 + 1 ]));v71=(v216 + v214) -1 ;local v217=0;for v345=v214,v71 do v217=v217 + 1 ;v76[v345]=v215[v217];end else v76[v78[2]][v76[v78[3]]]=v76[v78[4]];end elseif (v79==71) then v76[v78[2]]=v29(v67[v78[3]],nil,v62);else local v221=0;local v222;local v223;while true do if (v221==0) then v222=v78[2];v223=v76[v78[3]];v221=1;end if (v221==1) then v76[v222 + 1 ]=v223;v76[v222]=v223[v78[4]];break;end end end elseif (v79<=76) then if (v79<=74) then if (v79==73) then do return v76[v78[2]];end else v76[v78[2]]=v76[v78[3]]/v78[4] ;end elseif (v79==75) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]][v78[3]]=v76[v78[4]];end elseif (v79<=78) then if (v79>77) then v76[v78[2]]=v78[3]^v76[v78[4]] ;else local v228=0;local v229;while true do if (v228==0) then v229=v78[2];do return v13(v76,v229,v71);end break;end end end elseif (v79==79) then local v230=0;local v231;while true do if (v230==0) then v231=v78[2];do return v13(v76,v231,v231 + v78[3] );end break;end end elseif (v76[v78[2]]<v76[v78[4]]) then v70=v78[3];else v70=v70 + 1 ;end elseif (v79<=88) then if (v79<=84) then if (v79<=82) then if (v79>81) then v76[v78[2]]=v78[3];else local v234=v78[2];v76[v234](v13(v76,v234 + 1 ,v78[3]));end elseif (v79==83) then v76[v78[2]]=v76[v78[3]][v76[v78[4]]];else v76[v78[2]]=v61[v78[3]];end elseif (v79<=86) then if (v79==85) then local v239=0;local v240;local v241;local v242;while true do if (v239==2) then for v455=1,v78[4] do v70=v70 + 1 ;local v456=v66[v70];if (v456[1]==100) then v242[v455-1 ]={v76,v456[3]};else v242[v455-1 ]={v61,v456[3]};end v75[ #v75 + 1 ]=v242;end v76[v78[2]]=v29(v240,v241,v62);break;end if (v239==0) then v240=v67[v78[3]];v241=nil;v239=1;end if (v239==1) then v242={};v241=v10({},{__index=function(v458,v459) local v460=0;local v461;while true do if (v460==0) then v461=v242[v459];return v461[1][v461[2]];end end end,__newindex=function(v462,v463,v464) local v465=0;local v466;while true do if (v465==0) then v466=v242[v463];v466[1][v466[2]]=v464;break;end end end});v239=2;end end else local v243=0;local v244;while true do if (v243==0) then v244=v78[2];do return v76[v244](v13(v76,v244 + 1 ,v71));end break;end end end elseif (v79==87) then if (v78[2]<=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else local v245=0;while true do if (v245==0) then v76[v78[2]]=v78[3]~=0 ;v70=v70 + 1 ;break;end end end elseif (v79<=92) then if (v79<=90) then if (v79==89) then v76[v78[2]]=v78[3]~=0 ;elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79>91) then local v247=0;local v248;local v249;while true do if (1==v247) then for v467=1, #v75 do local v468=v75[v467];for v487=0, #v468 do local v488=0;local v489;local v490;local v491;while true do if (0==v488) then v489=v468[v487];v490=v489[1];v488=1;end if (1==v488) then v491=v489[2];if ((v490==v76) and (v491>=v248)) then local v514=0;while true do if (0==v514) then v249[v491]=v490[v491];v489[1]=v249;break;end end end break;end end end end break;end if (v247==0) then v248=v78[2];v249={};v247=1;end end else v76[v78[2]]=v76[v78[3]] * v78[4] ;end elseif (v79<=94) then if (v79==93) then local v251=v78[2];do return v13(v76,v251,v71);end else local v252=v78[2];local v253={v76[v252](v13(v76,v252 + 1 ,v71))};local v254=0;for v348=v252,v78[4] do v254=v254 + 1 ;v76[v348]=v253[v254];end end elseif (v79==95) then v70=v78[3];else v76[v78[2]]=v76[v78[3]][v78[4]];end elseif (v79<=112) then if (v79<=104) then if (v79<=100) then if (v79<=98) then if (v79>97) then v76[v78[2]]=v76[v78[3]] -v76[v78[4]] ;elseif (v76[v78[2]]<=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79>99) then v76[v78[2]]=v76[v78[3]];else local v261=0;local v262;while true do if (v261==0) then v262=v78[2];v76[v262]=v76[v262](v76[v262 + 1 ]);break;end end end elseif (v79<=102) then if (v79==101) then local v263=0;local v264;while true do if (0==v263) then v264=v78[2];do return v76[v264](v13(v76,v264 + 1 ,v71));end break;end end else v76[v78[2]]= #v76[v78[3]];end elseif (v79==103) then v76[v78[2]]();else v76[v78[2]]={};end elseif (v79<=108) then if (v79<=106) then if (v79>105) then local v267=0;local v268;while true do if (v267==0) then v268=v78[2];v76[v268]=v76[v268]();break;end end else v76[v78[2]]=v76[v78[3]] -v76[v78[4]] ;end elseif (v79==107) then local v270=v78[3];local v271=v76[v270];for v351=v270 + 1 ,v78[4] do v271=v271   .. v76[v351] ;end v76[v78[2]]=v271;elseif  not v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=110) then if (v79>109) then local v273=0;local v274;while true do if (v273==0) then v274=v78[2];v76[v274]=v76[v274](v13(v76,v274 + 1 ,v71));break;end end else local v275=v78[2];local v276=v76[v275];for v352=v275 + 1 ,v78[3] do v7(v276,v76[v352]);end end elseif (v79==111) then v76[v78[2]][v78[3]]=v78[4];else v76[v78[2]]=v78[3]^v76[v78[4]] ;end elseif (v79<=120) then if (v79<=116) then if (v79<=114) then if (v79>113) then for v353=v78[2],v78[3] do v76[v353]=nil;end else local v280=v78[3];local v281=v76[v280];for v355=v280 + 1 ,v78[4] do v281=v281   .. v76[v355] ;end v76[v78[2]]=v281;end elseif (v79>115) then if (v76[v78[2]]<v76[v78[4]]) then v70=v78[3];else v70=v70 + 1 ;end else local v283=0;local v284;local v285;local v286;while true do if (0==v283) then v284=v78[2];v285=v76[v284];v283=1;end if (1==v283) then v286=v78[3];for v469=1,v286 do v285[v469]=v76[v284 + v469 ];end break;end end end elseif (v79<=118) then if (v79>117) then v76[v78[2]][v78[3]]=v78[4];else local v289=0;local v290;local v291;local v292;local v293;while true do if (v289==0) then v290=v78[2];v291,v292=v69(v76[v290](v76[v290 + 1 ]));v289=1;end if (v289==2) then for v472=v290,v71 do local v473=0;while true do if (v473==0) then v293=v293 + 1 ;v76[v472]=v291[v293];break;end end end break;end if (1==v289) then v71=(v292 + v290) -1 ;v293=0;v289=2;end end end elseif (v79==119) then do return;end else v76[v78[2]]=v76[v78[3]] + v76[v78[4]] ;end elseif (v79<=124) then if (v79<=122) then if (v79==121) then v76[v78[2]][v78[3]]=v76[v78[4]];else local v297=0;local v298;while true do if (0==v297) then v298=v78[2];v76[v298](v13(v76,v298 + 1 ,v71));break;end end end elseif (v79>123) then v62[v78[3]]=v76[v78[2]];else local v301=0;local v302;local v303;local v304;while true do if (v301==0) then v302=v78[2];v303={v76[v302](v13(v76,v302 + 1 ,v71))};v301=1;end if (1==v301) then v304=0;for v474=v302,v78[4] do local v475=0;while true do if (0==v475) then v304=v304 + 1 ;v76[v474]=v303[v304];break;end end end break;end end end elseif (v79<=126) then if (v79>125) then if (v76[v78[2]]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else local v305=0;local v306;local v307;local v308;while true do if (v305==1) then v308=0;for v476=v306,v78[4] do v308=v308 + 1 ;v76[v476]=v307[v308];end break;end if (0==v305) then v306=v78[2];v307={v76[v306](v76[v306 + 1 ])};v305=1;end end end elseif (v79<=127) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==128) then local v388=v78[2];v76[v388]=v76[v388](v13(v76,v388 + 1 ,v78[3]));else v76[v78[2]]=v78[3];end v70=v70 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
